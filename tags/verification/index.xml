<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>verification on Awesome resources for Hardware Description</title>
    <link>https://hdl.github.io/awesome/tags/verification/</link>
    <description>Recent content in verification on Awesome resources for Hardware Description</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 25 Nov 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hdl.github.io/awesome/tags/verification/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>VUnit</title>
      <link>https://hdl.github.io/awesome/items/vunit/</link>
      <pubDate>Tue, 25 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hdl.github.io/awesome/items/vunit/</guid>
      <description>&lt;p&gt;&lt;em&gt;&amp;ldquo;VUnit is an open source unit testing framework for VHDL/SystemVerilog [&amp;hellip;] It features the functionality needed to realize continuous and automated testing of your HDL code. VUnit doesn’t replace but rather complements traditional testing methodologies by supporting a “test early and often” approach through automation.&amp;quot;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Coroutine Co-simulation Test Bench (cocotb)</title>
      <link>https://hdl.github.io/awesome/items/cocotb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hdl.github.io/awesome/items/cocotb/</guid>
      <description>&lt;p&gt;&lt;em&gt;&amp;ldquo;cocotb is a coroutine based cosimulation library for writing VHDL and Verilog testbenches in Python.&amp;quot;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Open Source VHDL Verification Methodology (OSVVM)</title>
      <link>https://hdl.github.io/awesome/items/osvvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hdl.github.io/awesome/items/osvvm/</guid>
      <description>&lt;p&gt;&lt;em&gt;&amp;ldquo;Open Source VHDL Verification Methodology (OSVVM) provides an ASIC level VHDL verification methodology that is simple enough to use even on small FPGA projects. OSVVM offers the same capabilities as those based on other verification languages:&amp;quot;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SymbiYosys (sby)</title>
      <link>https://hdl.github.io/awesome/items/symbiyosys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hdl.github.io/awesome/items/symbiyosys/</guid>
      <description>&lt;p&gt;&lt;em&gt;&amp;ldquo;SymbiYosis a front-end driver program for Yosys-based formal hardware
verification flows. SymbiYosys provides flows for the following formal tasks:
Bounded verification of safety properties (assertions),
Unbounded verification of safety properties,
Generation of test benches from cover statements,
Verification of liveness properties&amp;rdquo;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Universal VHDL Verification Methodology (UVVM)</title>
      <link>https://hdl.github.io/awesome/items/uvvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hdl.github.io/awesome/items/uvvm/</guid>
      <description>&lt;p&gt;&lt;em&gt;&amp;ldquo;Open Source VHDL Verification Library and Methodology - for very efficient VHDL verification of FPGA and ASIC - resulting also in a significant quality improvement&amp;rdquo;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>